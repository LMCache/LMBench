name: Test Self-Hosted Runner

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-runner:
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check run-bench.yaml configuration
        shell: bash
        run: |
          if [ ! -f "run-bench.yaml" ]; then
            echo "::error:: run-bench.yaml not found in project root."
            exit 1
          fi

          # Check if any of the spec files contain LMCacheGKE
          found_lmcache_gke=false

          # Extract spec files from run-bench.yaml and check each one
          spec_files=$(python3 -c "
          import yaml
          with open('run-bench.yaml', 'r') as f:
              config = yaml.safe_load(f)
              for spec_file in config.get('0-bench-specs', []):
                  print(f'0-bench-specs/{spec_file}')
          ")

          for spec_file in $spec_files; do
            if [ -f "$spec_file" ]; then
              if grep -q "Location: LMCacheGKE" "$spec_file"; then
                found_lmcache_gke=true
                echo "✅ Found LMCacheGKE configuration in $spec_file"
                break
              fi
            else
              echo "::warning:: Spec file $spec_file not found"
            fi
          done

          if [ "$found_lmcache_gke" = false ]; then
            echo "::warning:: Location: LMCacheGKE not found in any spec files. Skipping benchmark run."
            exit 0
          fi

          echo "✅ run-bench.yaml correctly configured for LMCacheGKE."

      - name: Show runner info
        run: |
          echo "✅ Running on self-hosted runner!"
          uname -a
          whoami
          echo "Current directory: $(pwd)"

      - name: Check gcloud CLI
        run: |
          echo "✅ Checking gcloud installation..."
          gcloud --version

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/816706432769/locations/global/workloadIdentityPools/lmbench-pool/providers/github-provider'
          service_account: 'lmbench-runner@theta-dialect-454217-m5.iam.gserviceaccount.com'

      - name: Show active gcloud account
        run: |
          echo "✅ Checking gcloud auth list..."
          gcloud auth list

      - name: Show active gcloud project
        run: |
          echo "✅ Checking gcloud active project..."
          gcloud config get-value project

      - name: List Compute Engine instances
        run: |
          echo "✅ Listing compute instances..."
          gcloud compute instances list

      - name: Set up Conda environment and run benchmark script
        shell: bash -l {0}
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          source ~/miniconda3/etc/profile.d/conda.sh
          conda activate py312
          python --version
          echo "✅ Running benchmark script..."
          python run-bench.py

      - name: Upload .results artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: 4-latest-results/*.results

  cleanup:
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
    if: always()
    needs: [test-runner]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/816706432769/locations/global/workloadIdentityPools/lmbench-pool/providers/github-provider'
          service_account: 'lmbench-runner@theta-dialect-454217-m5.iam.gserviceaccount.com'

      - name: Run cleanup script
        shell: bash
        run: |
          echo "Running cleanup script to ensure GKE resources are removed..."
          chmod +x ./4-latest-results/post-processing/cleanup.sh
          ./4-latest-results/post-processing/cleanup.sh
          echo "✅ Cleanup completed"
